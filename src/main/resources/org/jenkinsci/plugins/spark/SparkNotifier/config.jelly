<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form">
  <!--
    This jelly script is used for per-project configuration.

    See global.jelly for a general discussion about jelly script.
  -->

  <!--
    Creates a text field that shows the value of the "name" property.
    When submitted, it will be passed to the corresponding constructor parameter.
  -->
 <f:entry title="Disable" field="disable">
        <f:checkbox  checked="${instance.disable}"/>
 </f:entry>
 <f:entry title="Not Notify When Success" field="notnotifyifsuccess">
        <f:checkbox  checked="${instance.notnotifyifsuccess}"/>
 </f:entry>

  <f:entry title="Cisco Spark Room" field="sparkRoomName">
        <select class="setting-input" name="sparkRoomName">
               <j:forEach var="sparkRoom" items="${descriptor.sparkRooms}">
                    <f:option selected="${sparkRoom.name==instance.sparkRoomName}">${sparkRoom.name}</f:option>
                </j:forEach>
              </select>
            </f:entry>
            
  <f:entry title="Notification Content Prefix" field="publishContentPrefix">
    <f:textbox default="[message from cisco spark plugin for jenkins]" />
  </f:entry>
  
  <f:entry title="Notification Content" field="publishContent">
    <f:textbox default="$${DEFAULT_CONTENT}" />
  </f:entry>
    
  <f:entry field="invitetoroom">
  <f:checkbox name="invitetoroom" checked="${instance.invitetoroom}"/>
  <label>Invite committers to room if build is fail</label>
  </f:entry>
  
  <f:entry field="attachtestresult">
  <f:checkbox name="attachtestresult" checked="${instance.attachtestresult}"/>
  <label>Attach test results if existed</label>
  </f:entry>
  
  <f:entry field="attachcodechange">
  <f:checkbox name="attachcodechange" checked="${instance.attachcodechange}"/>
  <label>Attach code changes infos if existed</label>
  </f:entry>
  
</j:jelly>

